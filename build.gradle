buildscript {
  ext.kotlinVersion = '1.1.51'
  repositories {
    jcenter()
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.2'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'me.tatarka:gradle-retrolambda:3.6.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    classpath 'org.codehaus.groovy:groovy-android-gradle-plugin:1.2.0'
    classpath 'net.kaleidos.gradle.plugins:emerger:0.0.2'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.6.0"

    // fabric swears that this is okay...
    //noinspection GradleDynamicVersion
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply from: "$rootDir/gradle/signing.gradle"
apply from: "$rootDir/gradle/spotless.gradle"

repositories {
  jcenter()
  maven { url 'https://maven.google.com' }
  maven { url 'https://maven.fabric.io/public' }
  maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

def getGitSha() {
  def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

def getGitTimestamp() {
  def p = 'git log -n 1 --format=%at'.execute([], rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

android {
  compileSdkVersion 26
  buildToolsVersion '26.0.2'

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
    release {
      storeFile file("$keystoreLocation")
      storePassword keystorePassword
      keyAlias storeKeyAlias
      keyPassword aliasKeyPassword
    }
  }

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 26
    multiDexEnabled true

    versionCode 1
    versionName 'ðŸŒ¶'

    buildConfigField 'String', 'GIT_SHA', "\"$gitSha\""
    buildConfigField 'long', 'GIT_TIMESTAMP', "$gitTimestamp"
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      signingConfig signingConfigs.debug
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
  }

  productFlavors {
    internal { applicationId 'com.andrewreitz.cash.andrew.mntrailconditions.internal' }
    production { applicationId 'com.andrewreitz.cash.andrew.mntrailconditions' }
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  dexOptions { javaMaxHeapSize '4G' }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE.txt'
  }

  sourceSets.main.java.srcDirs += 'src/main/kotlin'
}

configurations { internalDebugCompile }

ext {
  supportVersion = '26.1.0'
  stethoVersion = '1.4.2'
  retrofitVersion = '2.2.0'
}

dependencies {
  compile 'org.codehaus.groovy:groovy:2.4.10:grooid'

  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

  compile 'com.arasthel:swissknife:1.4.0'

  compile 'com.android.support.constraint:constraint-layout:1.0.2'
  compile "com.android.support:support-v4:$supportVersion"
  compile "com.android.support:support-annotations:$supportVersion"
  compile "com.android.support:appcompat-v7:$supportVersion"
  compile "com.android.support:recyclerview-v7:$supportVersion"
  compile "com.android.support:design:$supportVersion"
  compile "com.android.support:cardview-v7:$supportVersion"

  compile 'com.squareup.dagger:dagger:1.2.5'
  annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.5'

  compile 'com.squareup.okhttp3:okhttp:3.6.0'
  compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
  compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
  compile "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
  compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
  internalDebugCompile "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"

  compile 'com.jakewharton:butterknife:8.5.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

  compile 'com.jakewharton:process-phoenix:2.0.0'
  compile 'com.jakewharton.timber:timber:4.5.1'
  compile 'com.jakewharton.byteunits:byteunits:0.9.1'
  compile 'com.jakewharton.rxbinding:rxbinding:1.0.1'
  internalDebugCompile 'com.jakewharton.madge:madge:1.1.4'
  internalDebugCompile 'com.jakewharton.scalpel:scalpel:1.1.2'

  internalCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

  compile 'io.reactivex:rxjava:1.2.9'
  compile 'io.reactivex:rxandroid:1.2.1'

  compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'

  internalCompile 'com.mattprecious.telescope:telescope:2.1.0@aar'

  compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.2'

  compile 'io.github.kobakei:ratethisapp:1.2.0'

  internalCompile "com.facebook.stetho:stetho:$stethoVersion"
  internalCompile "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
  internalCompile "com.facebook.stetho:stetho-timber:$stethoVersion@aar"

  compile 'com.andrewreitz.velcro:velcro-bindablerecycleradapter:2.0.0-SNAPSHOT'

  productionCompile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') { transitive = true }

  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
}

androidGroovy {
  // setup custom groovy compile options
  options {
    configure(groovyOptions) {
      javaAnnotationProcessing = true
      configurationScript = file("$projectDir/config/groovy-compile-options.groovy")
    }
  }
  skipJavaC = true
}

configurations.all { resolutionStrategy { force "com.android.support:support-annotations:$supportVersion" } }

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
  installAll.dependsOn(variant.install)
  // Ensure we end up in the same group as the other install tasks.
  installAll.group = variant.install.group
}

// The default 'assemble' task only applies to normal variants. Add test variants as well.
android.testVariants.all { variant ->
  tasks.getByName('assemble').dependsOn variant.assemble
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = [
        'alpha',
        'beta',
        'alpha-preview-01'
      ].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}
