buildscript {
  ext.kotlinVersion = '1.2.51'
  repositories {
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.3.0-alpha02'
    classpath 'com.google.gms:google-services:3.2.0'
    classpath 'com.google.firebase:firebase-plugins:1.1.5'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.10.0"
    classpath 'io.fabric.tools:gradle:1.25.4'
    classpath 'android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0-alpha02'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'androidx.navigation.safeargs'
apply from: "$rootDir/gradle/signing.gradle"
apply from: "$rootDir/gradle/spotless.gradle"

repositories {
  google()
  jcenter()
  maven { url 'https://maven.fabric.io/public' }
  maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
  maven { url 'https://jitpack.io' }
}

def getGitSha() {
  def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

def getGitTimestamp() {
  def p = 'git log -n 1 --format=%at'.execute([], rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

android {
  compileSdkVersion 28
  buildToolsVersion '27.0.3'

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'android'
      keyPassword 'android'
    }
    release {
      storeFile file("$keystoreLocation")
      storePassword keystorePassword
      keyAlias storeKeyAlias
      keyPassword aliasKeyPassword
    }
  }

  defaultConfig {
    applicationId 'com.andrewreitz.cash.andrew.mntrailconditions'
    minSdkVersion 21
    targetSdkVersion 27
    multiDexEnabled true

    versionCode 1
    versionName '🍇'

    buildConfigField 'String', 'GIT_SHA', "\"$gitSha\""
    buildConfigField 'long', 'GIT_TIMESTAMP', "$gitTimestamp"
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      signingConfig signingConfigs.debug
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      shrinkResources false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
  }

  flavorDimensions 'environment'

  productFlavors {
    internal {
      dimension 'environment'
      applicationIdSuffix 'internal'
    }
    production { dimension 'environment' }
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
    tasks.lint.enabled = false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE.txt'
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    internalDebug.java.srcDirs += 'src/internalDebug/kotlin'
    internalRelease.java.srcDirs += 'src/internalRelease/kotlin'
    production.java.srcDirs += 'src/production/kotlin'
  }
}

configurations { internalDebugImplementation }

ext {
  stethoVersion = '1.5.0'
  retrofitVersion = '2.4.0'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha1'
  implementation 'androidx.annotation:annotation:1.0.0-beta01'
  implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
  implementation 'androidx.recyclerview:recyclerview:1.0.0-beta01'
  implementation 'androidx.cardview:cardview:1.0.0-beta01'
  implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-beta01'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0-beta01'

  implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha02'
  implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha02'
  implementation 'com.google.android.material:material:1.0.0-beta01'

  implementation 'com.google.firebase:firebase-core:16.0.1'
  implementation 'com.google.firebase:firebase-perf:16.0.0'
  implementation 'com.google.firebase:firebase-config:16.0.0'
  implementation 'com.google.firebase:firebase-messaging:17.1.0'

  implementation 'com.google.dagger:dagger:2.16'
  kapt 'com.google.dagger:dagger-compiler:2.16'

  implementation 'com.squareup.okhttp3:okhttp:3.10.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

  implementation 'com.squareup.moshi:moshi:1.6.0'
  kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'

  implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
  implementation 'com.jakewharton:process-phoenix:2.0.0'
  implementation 'com.jakewharton.timber:timber:4.7.1'
  implementation 'com.jakewharton.byteunits:byteunits:0.9.1'

  debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
  releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

  internalImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  productionImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

  implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

  implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'

  implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'

  implementation 'io.github.kobakei:ratethisapp:1.2.0'

  internalImplementation "com.facebook.stetho:stetho:$stethoVersion"
  internalImplementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
  internalImplementation "com.facebook.stetho:stetho-timber:$stethoVersion@aar"

  implementation 'com.andrewreitz.velcro:velcro-bindablerecycleradapter:2.0.0-SNAPSHOT'

  implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'

  testImplementation 'org.amshove.kluent:kluent-android:1.38'
}

kapt.useBuildCache = true

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
  installAll.dependsOn(variant.install)
  // Ensure we end up in the same group as the other install tasks.
  installAll.group = variant.install.group
}

// The default 'assemble' task only applies to normal variants. Add test variants as well.
android.testVariants.all { variant ->
  tasks.getByName('assemble').dependsOn variant.assemble
}

apply plugin: 'com.google.gms.google-services'
